name: Docker Build, Push, and Deploy to AWS EC2

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3


         # Step 3: Log in to Docker Hub
      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u thashenu --password-stdin
        env:
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

      # Step 2: Build Docker image
      - name: Build Docker image
        run: |
          docker build -t thashenu/deployetest:build-$GITHUB_RUN_NUMBER \
          --build-arg NEXTAUTH_SECRET=${{ secrets.NEXTAUTH_SECRET }} \
          --build-arg MONGODB_URI=${{ secrets.MONGODB_URI }} \
          --build-arg GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }} \
          --build-arg GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }} \
          . .
          
    



      # Step 4: Push Docker image
      - name: Push Docker image
        run: |
          docker push thashenu/deployetest:build-$GITHUB_RUN_NUMBER

      # # Step 5: Logout from Docker Hub (always run)
      # - name: Logout from Docker Hub
      #   if: always()
      #   run: docker logout

  deploy-to-ec2:
    runs-on: ubuntu-latest
    needs: build-and-push  # Ensure this job runs after build-and-push

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Add SSH key for EC2 access
      - name: Add SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/ec2-key.pem
          chmod 600 ~/.ssh/ec2-key.pem
          ssh-keyscan ${{ secrets.EC2_IP }} >> ~/.ssh/known_hosts

      # Step 3: Copy files to EC2 instance
      - name: Copy files to EC2
        run: |
          scp -i ~/.ssh/ec2-key.pem docker-compose.yml .env ubuntu@${{ secrets.EC2_IP }}:/home/ubuntu

      # Step 4: Deploy application on EC2
      - name: Deploy application
        run: |
          ssh -i ~/.ssh/ec2-key.pem ubuntu@${{ secrets.EC2_IP }} "
            docker compose -f /home/ubuntu/docker-compose.yml --env-file /home/ubuntu/.env down || true
            docker compose -f /home/ubuntu/docker-compose.yml --env-file /home/ubuntu/.env up -d
          "
